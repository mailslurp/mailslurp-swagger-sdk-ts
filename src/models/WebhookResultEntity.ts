/* tslint:disable */
/* eslint-disable */
/**
 * MailSlurp API
 * MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It\'s designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
 *
 * The version of the OpenAPI document: 6.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebhookResultEntity
 */
export interface WebhookResultEntity {
    /**
     * 
     * @type {Date}
     * @memberof WebhookResultEntity
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    httpMethod: WebhookResultEntityHttpMethodEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    inboxId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    responseBodyExtract?: string;
    /**
     * 
     * @type {number}
     * @memberof WebhookResultEntity
     */
    responseStatus?: number;
    /**
     * 
     * @type {number}
     * @memberof WebhookResultEntity
     */
    responseTimeMillis: number;
    /**
     * 
     * @type {Date}
     * @memberof WebhookResultEntity
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    userId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    webhookEvent: WebhookResultEntityWebhookEventEnum;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    webhookId: string;
    /**
     * 
     * @type {string}
     * @memberof WebhookResultEntity
     */
    webhookUrl: string;
}

export function WebhookResultEntityFromJSON(json: any): WebhookResultEntity {
    return WebhookResultEntityFromJSONTyped(json, false);
}

export function WebhookResultEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebhookResultEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': (new Date(json['createdAt'])),
        'httpMethod': json['httpMethod'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'inboxId': json['inboxId'],
        'messageId': json['messageId'],
        'responseBodyExtract': !exists(json, 'responseBodyExtract') ? undefined : json['responseBodyExtract'],
        'responseStatus': !exists(json, 'responseStatus') ? undefined : json['responseStatus'],
        'responseTimeMillis': json['responseTimeMillis'],
        'updatedAt': (new Date(json['updatedAt'])),
        'userId': json['userId'],
        'webhookEvent': json['webhookEvent'],
        'webhookId': json['webhookId'],
        'webhookUrl': json['webhookUrl'],
    };
}

export function WebhookResultEntityToJSON(value?: WebhookResultEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': (value.createdAt.toISOString()),
        'httpMethod': value.httpMethod,
        'id': value.id,
        'inboxId': value.inboxId,
        'messageId': value.messageId,
        'responseBodyExtract': value.responseBodyExtract,
        'responseStatus': value.responseStatus,
        'responseTimeMillis': value.responseTimeMillis,
        'updatedAt': (value.updatedAt.toISOString()),
        'userId': value.userId,
        'webhookEvent': value.webhookEvent,
        'webhookId': value.webhookId,
        'webhookUrl': value.webhookUrl,
    };
}

/**
* @export
* @enum {string}
*/
export enum WebhookResultEntityHttpMethodEnum {
    GET = 'GET',
    HEAD = 'HEAD',
    POST = 'POST',
    PUT = 'PUT',
    PATCH = 'PATCH',
    DELETE = 'DELETE',
    OPTIONS = 'OPTIONS',
    TRACE = 'TRACE'
}
/**
* @export
* @enum {string}
*/
export enum WebhookResultEntityWebhookEventEnum {
    EMAILRECEIVED = 'EMAIL_RECEIVED',
    NEWEMAIL = 'NEW_EMAIL',
    NEWCONTACT = 'NEW_CONTACT',
    NEWATTACHMENT = 'NEW_ATTACHMENT',
    EMAILOPENED = 'EMAIL_OPENED'
}


